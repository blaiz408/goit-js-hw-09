{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,OAAQJ,SAASC,cAAc,0BAwBjC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUJ,MAAAK,IAEpBM,EAAO,CAAEE,SAAAT,EAAUJ,MAAAK,GAAQ,GAE5BA,EAAM,IAIRS,MAAK,EAACD,SAAEA,EAAQb,MAAEA,MACjBN,EAAAqB,OAAOC,QAAQ,uBAAqBH,QAAiBb,OACnDiB,QAAMC,IAAI,uBAAqBL,QAAiBb,MAAU,IAE7DmB,OAAM,EAACN,SAAEA,EAAQb,MAAEA,MAClBN,EAAAqB,OAAOK,QAAQ,sBAAoBP,QAAiBb,OAClDiB,QAAMC,IAAI,sBAAoBL,QAAeb,MAAU,G,CAzC/DF,SAASC,cAAc,uBAAuBsB,aAAa,MAAO,GAClEvB,SAASC,cAAc,sBAAsBsB,aAAa,MAAO,GACjEvB,SAASC,cAAc,wBAAwBsB,aAAa,MAAO,GAEnEzB,EAAKC,KAAKyB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAMC,iBAEN,MAAMxB,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWqB,EAAME,cAEtC,IAAIC,EAAaC,OAAO3B,EAAM4B,OAC9B,MAAMC,EAAYF,OAAO1B,EAAK2B,OACxBE,EAAeH,OAAOzB,EAAO0B,OAEnC,IAAK,IAAIf,EAAW,EAAGA,GAAYiB,EAAcjB,GAAY,EAC3Da,GAAcG,EACd1B,EAAcU,EAAUa,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.input[name=\"delay\"]'),\n  step: document.querySelector('.input[name=\"step\"]'),\n  amount: document.querySelector('.input[name=\"amount\"]'),\n};\n\ndocument.querySelector('input[name=\"delay\"]').setAttribute('min', 0);\ndocument.querySelector('input[name=\"step\"]').setAttribute('min', 0);\ndocument.querySelector('input[name=\"amount\"]').setAttribute('min', 0);\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget;\n\n  let delayFirst = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountNumber = Number(amount.value);\n\n  for (let position = 1; position <= amountNumber; position += 1) {\n    delayFirst += stepDelay;\n    createPromise(position, delayFirst);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","Notify","success","console","log","catch","failure","setAttribute","addEventListener","event","preventDefault","currentTarget","delayFirst","Number","value","stepDelay","amountNumber"],"version":3,"file":"03-promises.bd3c952c.js.map"}